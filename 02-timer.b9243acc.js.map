{"version":3,"sources":["js/02-timer.js"],"names":["docQuer","document","querySelector","startBtn","console","log","value","isActive","timer","start","startTime","Date","now","setInterval","updateInputFace","convertMs","days","hours","minutes","seconds","addLeadingZero","String","padStart","ms","Math","floor","hour","minute","second","addEventListener","setAttribute"],"mappings":";AAQA,MAAMA,EAAUC,SAASC,cAAc,oBACjCC,EAAWF,SAASC,cAAc,iBAGxCE,QAAQC,IAAIL,EAAQM,OAGpB,MAAMC,GAAW,EACXC,EAAQ,CAEXC,QAESC,MAAAA,EAAYC,KAAKC,MAEvBC,YAAY,KAMTC,EAHaC,EAFOJ,KAAKC,MACMF,KAQhC,OAcR,SAASI,GAAgB,KAACE,EAAD,MAAMC,EAAN,QAAYC,EAAZ,QAAoBC,IAC1CnB,EAAQM,SAAWU,KAAQC,KAASC,KAAWC,IAIlD,SAASC,EAAed,GACde,OAAAA,OAAOf,GAAOgB,SAAS,EAAG,KAKpC,SAASP,EAAUQ,GAgBV,MAAA,CAAEP,KARII,EAAeI,KAAKC,MAAMF,EAH3BG,QAWGT,MANDG,EAAeI,KAAKC,MAAOF,EAL7BG,MADCC,OAYST,QAJNE,EAAeI,KAAKC,MAAQF,EAPhCG,MADCC,KADEC,MAagBT,QAFfC,EAAeI,KAAKC,MAASF,EATjCG,MADCC,KADEC,IADA,OAtBjBzB,EAAS0B,iBAAiB,QAAS,KAI/B1B,EAAS2B,aAAa,YAAY,GACnCtB,EAAMC","file":"02-timer.b9243acc.js","sourceRoot":"../src","sourcesContent":["// const data = new Date().getTime();\n// console.log(data);\n\n// setTimeout(() => {\n//    console.log(data);\n//    const date = new Date();\n//    console.log(date);\n// }, 3000);\nconst docQuer = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[ data-start]');\n\n\nconsole.log(docQuer.value);\n// const res = docQuer.textContent\n// const docQuer = document.createElements();\nconst isActive = false;\nconst timer = {\n   \n   start() {\n     \n      const startTime = Date.now();\n      // console.log(dateTimeObj);\n      setInterval(() => {\n         const currentTime = Date.now();\n         const dataTime = currentTime - startTime;\n         const time = convertMs(dataTime);\n         // console.log(`${days}:${hours}:${minutes}:${seconds}`);\n         // const resOfTime = (`${days}:${hours}:${minutes}:${seconds}`)\n         updateInputFace(time);\n\n     \n         \n      },1000);\n   }\n   \n};\n\nstartBtn.addEventListener('click', () => {\n   //  if (isActive) {\n   //       return\n   // }\n    startBtn.setAttribute(\"disabled\", false)\n   timer.start();\n\n});\n\nfunction updateInputFace({days,hours,minutes,seconds}) {\n   docQuer.value = `${days}:${hours}:${minutes}:${seconds}`;\n};\n\n// ==================== функція додає знаки до значення ==================================================================\nfunction addLeadingZero(value) {\n   return String(value).padStart(2, '0');\n};\n// ========================================================================================================================\n\n// =================== функція для виоду часу =============================================================================\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = addLeadingZero(Math.floor(ms / day));\n  // Remaining hours\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = addLeadingZero(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}\n// ========================================================================================================================"]}